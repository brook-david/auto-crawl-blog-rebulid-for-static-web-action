{"id":1162,"date":"2024-05-14T05:43:34","date_gmt":"2024-05-14T05:43:34","guid":{"rendered":"https:\/\/blog.wanderto.top\/?p=1162"},"modified":"2024-05-15T06:30:14","modified_gmt":"2024-05-15T06:30:14","slug":"python-crawl-web-for-static-forward","status":"publish","type":"post","link":"https:\/\/blog.wanderto.top\/2024\/05\/14\/python-crawl-web-for-static-forward\/","title":{"rendered":"Python\u722c\u53d6\u7f51\u7ad9\u5185\u5bb9\u505a\u9759\u6001\u9875\u9762\u8f6c\u53d1"},"content":{"rendered":"\n<h2 class=\"wp-block-heading\">\u524d\u8a00<\/h2>\n\n\n\n<pre class=\"wp-block-preformatted\">\u7531\u4e8e\u672c\u7f51\u7ad9\u90e8\u7f72\u7684\u95ee\u9898\uff08\u4e91\u670d\u52a1+\u672c\u5730\u90e8\u7f72\uff09\uff0c\u672c\u5730\u53ef\u80fd\u6709\u591a\u79cd\u539f\u56e0\u5931\u8054\u3002\u4e3a\u4e86\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7f51\u7ad9\u4f9d\u7136\u80fd\u88ab\u7528\u6237\u67e5\u770b\uff0c\u6240\u4ee5\u5c06\u7f51\u7ad9\u5185\u5bb9\u722c\u53d6\u540e\u9759\u6001\u4fdd\u5b58\uff0c\u7136\u540e\u5229\u7528Nginx\u7684\u5f02\u5e38\u72b6\u6001\u6355\u6349\uff0c\u5f53\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\u5c06URI\u5bf9\u5e94\u7684\u9759\u6001\u6587\u4ef6\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">\u9875\u9762\u722c\u53d6<\/h2>\n\n\n\n<pre class=\"wp-block-preformatted\">\u4ee5\u4e0b\u4f7f\u7528\u4e86Python\u7684<a href=\"https:\/\/scrapy.org\/\" target=\"_blank\" rel=\"noopener\">scrapy<\/a>\u6846\u67b6\uff0c\u6839\u636e\u5b98\u7f51\u7684<a href=\"https:\/\/docs.scrapy.org\/en\/latest\/intro\/tutorial.html\" data-type=\"link\" data-id=\"https:\/\/docs.scrapy.org\/en\/latest\/intro\/tutorial.html\" target=\"_blank\" rel=\"noopener\">Scrapy Tutorial<\/a>\u63d0\u4f9b\u7684scrapy startproject tutorial\u547d\u4ee4\u53ef\u4ee5\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u722c\u866b\u9879\u76ee\uff0c\u521b\u5efa\u81ea\u5df1\u7684\u722c\u866b\u6587\u4ef6\u5e76\u7f16\u5199\u76f8\u5173\u903b\u8f91\u540e\u6267\u884cscrapy crawl blog\u547d\u4ee4\u542f\u52a8\u722c\u866b\uff0c\u722c\u866b\u6587\u4ef6\u53c2\u8003\u5982\u4e0b\uff1a<\/pre>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">from pathlib import Path\n\nimport scrapy\nimport logging\nfrom typing import TYPE_CHECKING, Any, Iterable, List, Optional, Union, cast\n\n\nclass QuotesSpider(scrapy.Spider):\n    # \u722c\u866b\u540d \u542f\u52a8\u722c\u866b scrapy crawl blog\n    name = \"blog\"\n    # \u4e0b\u8f7d\u57df\u540d\n    downloadHost = \"xxx.xxx.com\"\n    # \u4fdd\u5b58\u76ee\u5f55\n    saveDir = \"blog\"\n    # \u5df2\u8bbf\u95ee\u5217\u8868\n    accessedList = []\n    # \u5df2\u4e0b\u8f7d\u5217\u8868\n    downloadedList = []\n    # \u722c\u53d6\u5f00\u59cb\u5730\u5740\n    start_urls = [\n        \"https:\/\/xxx.xxx.com\",\n    ]\n\n    def parse(self, response):\n        self.log(\"\u8bbf\u95eepares:\" + response.url)\n        # \u6dfb\u52a0\u5230\u5df2\u8bbf\u95ee\u96c6\u5408\n        self._addAccess(response.url)\n        # \u4e0b\u8f7d\u5f53\u524d\u9875\u9762\n        self.download(response)\n\n        # \u8d44\u6e90\u4e0b\u8f7d\n        # \u56fe\u7247\u4e0b\u8f7d\n        images = response.css(\"img::attr(src)\")\n        self.log(\"images :\" + str(images))\n        for item in images:\n            s_item = str(item)\n            if s_item.__contains__(self.downloadHost) and not self._isDownloaded(s_item):\n                yield response.follow(s_item, self.download)\n        # link(css)\u4e0b\u8f7d\n        links = response.css(\"link::attr(href)\")\n        self.log(\"links :\" + str(links))\n        for item in links:\n            # \u79fb\u9664url\u540e\u7684\u53c2\u6570\n            s_item = self._removeParameter(str(item))\n            if s_item.__contains__(self.downloadHost) and not self._isDownloaded(s_item):\n                yield response.follow(s_item, self.download)\n        # script\u4e0b\u8f7d\n        scripts = response.css(\"script::attr(src)\")\n        self.log(\"scripts :\" + str(scripts))\n        for item in scripts:\n            # \u79fb\u9664url\u540e\u7684\u53c2\u6570\n            s_item = self._removeParameter(str(item))\n            if s_item.__contains__(self.downloadHost) and not self._isDownloaded(s_item):\n                yield response.follow(s_item, self.download)\n\n        # \u5176\u4ed6\u9875\u9762\u722c\u53d6\n        aList = response.css(\"a::attr(href)\")\n        self.log(\"\")\n        for a in aList:\n            stra = str(a)\n            if stra.__contains__(self.downloadHost):\n                if self._isAccessed(stra):\n                    self.log(\"\u5df2\u4e0b\u8f7d\u8fc7\u7684\u672c\u7ad9\u5730\u5740\uff1a\" + stra)\n                    continue\n\n                self.log(\"\u53ef\u4e0b\u8f7d\u7684\u672c\u7ad9\u5730\u5740\uff1a\"+stra)\n            else:\n                self.log(\"\u4e0d\u53ef\u4e0b\u8f7d\u7684\u5730\u5740\uff1a\" + stra)\n                continue\n            yield response.follow(a, self.parse)\n\n    def download(self, response):\n        self._download(response.url, response.body)\n        # filename = f\"quotes-{page}.html\"\n        # Path(filename).write_bytes(response.body)\n\n    def _download(self, url, body):\n        if self._isDownloadedAndSave(url):\n            return\n        # https:\/\/xxx.xxx.com\/xx\/xx\/\n        url = self._switchHtml(url)\n        # self.log(\"\u8fdb\u884c\u9875\u9762\u4e0b\u8f7d\u6d41\u7a0b\uff0c\u4e0b\u8f7d\u6587\u4ef6\uff1a\"+url)\n\n        # \u83b7\u53d6https:\/\/\u540e\u7684\u5185\u5bb9\n        paths = url.split(\"\/\")[2:]\n        if paths[0].__eq__(self.downloadHost):\n            self.log(\"\u4e0b\u8f7d\u9875\u9762\uff1a\" + url)\n        else:\n            return\n\n        # \u53bb\u9664host\n        paths = paths[1:]\n\n        for index, name in enumerate(paths):\n            path = self._getMainDir() + \"\/\" + \"\/\".join(paths[0:index + 1])\n            file = Path(path)\n            if name.__eq__(paths[-1]):\n                # self.log(\"file:\" + name)\n                if file.exists():\n                    self.log(\"warn: file exists \" + path)\n                    continue\n                file.write_bytes(body)\n            else:\n                # self.log(\"dir:\" + name)\n                if file.exists():\n                    continue\n                file.mkdir()\n\n    def _getMainDir(self):\n        dir = Path(self.saveDir)\n        if not dir.exists():\n            dir.mkdir()\n        return self.saveDir\n\n    def _switchHtml(self, url):\n        # \/\u4e0ehost\u7ed3\u5c3e\u5219\u4e3a\u9875\u9762\n        if url.endswith(\"\/\"):\n            url = url + \"index.html\"\n        elif url.endswith(self.downloadHost):\n            url = url + \"\/index.html\"\n        return url\n\n    def _isDownloaded(self, url):\n        if url in self.downloadedList:\n            return True\n        return False\n\n    def _isDownloadedAndSave(self, url):\n        if self._isDownloaded(url):\n            return True\n        self.downloadedList.append(url)\n        return False\n\n    def _isAccessed(self, url):\n        if url in self.accessedList:\n            return True\n        return False\n\n    def _addAccess(self, url):\n        if not self._isAccessed(url):\n            self.accessedList.append(url)\n\n    def _removeParameter(self, url):\n        return url.split(\"?\")[0]\n\n    def log(self, message: Any, level: int = logging.DEBUG, **kw: Any) -> None:\n        print(message)\n\n\nif __name__ == '__main__':\n    q = QuotesSpider();\n    # q._download(q.downloadHost, b\"aa\")\n    # print(q._isDownloadedAndSave(q.downloadHost))\n    # print(q._removeParameter(q.downloadHost+\"\/wp-content\/plugins\/enlighter\/cache\/enlighterjs.min.css?ver=vo\/Yz0k1HSy0Sr5\"))\n    print(q.downloadHost+\"\/2024\/04\/28\/wordpress-custome-css-define-website\/\".split(\"\/\"))<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">\u63d0\u4ea4Github\u4ed3\u5e93<\/h2>\n\n\n\n<pre class=\"wp-block-preformatted\">1.\u521b\u5efa\u4ed3\u5e93\n\u767b\u5f55Github\u521b\u5efa\u4ed3\u5e93\uff0c\u4ed3\u5e93\u540d\u9700\u8981\u8bbe\u7f6e\u4e3a\u201cxxxx.github.io\"\uff0c\u8fd9\u6837Github\u4f1a\u4e3a\u5f53\u524d\u4ed3\u5e93\u521b\u5efa\u4e00\u4e2aGithub Pages\uff0c\u5982\u679c\u547d\u540d\u4e3a\u201c\u7528\u6237\u540d.github.io\u201d\u66f4\u597d\uff0c\u8fd9\u6837\u5c31\u76f4\u63a5\u62e5\u6709\u4e86\u4e00\u4e2aGithub\u57df\u540d\u4e0b\u7684\u4e3b\u9875\u3002<\/pre>\n\n\n\n<pre class=\"wp-block-preformatted\">2.Git\u63d0\u4ea4\n\u5c06\u722c\u53d6\u4e0b\u6765\u7684\u6587\u4ef6\u63d0\u4ea4\u5230Github\u4e0a\uff1a<\/pre>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"bash\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">[root@iZbp1605iwejf5qgem2c7hZ ~]# cd blog\n[root@iZbp1605iwejf5qgem2c7hZ blog]# git init\n[root@iZbp1605iwejf5qgem2c7hZ blog]# git add .\n[root@iZbp1605iwejf5qgem2c7hZ blog]# git commit -m init\n[root@iZbp1605iwejf5qgem2c7hZ blog]# git remote add origin https:\/\/github.com\/xxxxxx\/xxxxxx.github.io.git\n[root@iZbp1605iwejf5qgem2c7hZ blog]# git checkout -b main\n[root@iZbp1605iwejf5qgem2c7hZ blog]# git push -u origin main<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">Ingress\u8f6c\u53d1\u81f3\u9759\u6001\u5730\u5740<\/h2>\n\n\n\n<pre class=\"wp-block-preformatted\">1.\u914d\u7f6eIngress\u5f53\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\u8f6c\u53d1Github\u5907\u4efd\u9875\u9762\uff1a<\/pre>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"># ingress snippets\u914d\u7f6e:\n    nginx.org\/server-snippets: |\n      error_page 502 = @fallback;\n      location @fallback {\n        proxy_pass https:\/\/xxxxxx.github.io;\n      }\n<\/pre>\n\n\n\n<pre class=\"wp-block-preformatted\">\u9700\u8981\u6ce8\u610f\uff0csnippets\u4e00\u65e6\u914d\u7f6e\u6709\u95ee\u9898\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u96c6\u7fa4\u7f51\u7edc\u5f02\u5e38\uff01\u5176\u4e2d\u6307\u5b9a\u7684\u57df\u540d\u5fc5\u9700\u662f\u5b9e\u65f6\u53ef\u89e3\u6790\u7684\uff01\u6240\u4ee5\u4e0d\u5efa\u8bae\u914d\u7f6ek8s service name\n\u53c2\u8003\uff1a<a href=\"https:\/\/blog.wanderto.top\/2024\/05\/15\/nginx-ingress-controller-snippets-configration-lead-to-cluster-network-exception\/\" data-type=\"link\" data-id=\"https:\/\/blog.wanderto.top\/wp-admin\/post.php?post=1183&amp;action=edit\">Nginx-Ingress-Controller Snippets\u914d\u7f6e\u5f15\u8d77\u96c6\u7fa4\u7f51\u7edc\u5f02\u5e38\u8bb0\u5f55<\/a><\/pre>\n\n\n\n<pre class=\"wp-block-preformatted\">2.\u9700\u8981\u5c06Nginx Ingress Controller\u914d\u7f6e\u5230\u63a7\u5236\u8282\u70b9\uff0c\u4ee5\u514d\u5de5\u4f5c\u8282\u70b9\u5f02\u5e38\u5bfc\u81f4\u4e0d\u53ef\u7528\n2.1 \u67e5\u770bnode taints\uff1a<\/pre>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"bash\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">[root@iZbp1605iwejf5qgem2c7hZ blog]# kubectl describe node|grep role -n\n8:                    node-role.kubernetes.io\/control-plane=\n18:Taints:             node-role.kubernetes.io\/control-plane:NoSchedule<\/pre>\n\n\n\n<pre class=\"wp-block-preformatted\">2.2 \u5728Nginx-Ingress-Controller Deployment\u914d\u7f6e\u6c61\u70b9\u5bb9\u5fcd\uff1a<\/pre>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"># \u914d\u7f6e\u5728spec.template.spec\u4e0b\n\ttolerations:  \n\t- key: \"node-role.kubernetes.io\/control-plane\"  \n\t  operator: \"Equal\"  \n\t  value: \"\"  \n\t  effect: \"NoSchedule\"<\/pre>\n\n\n\n<pre class=\"wp-block-preformatted\">\u914d\u7f6e\u5b8c\u6210\uff01\u5f53\u5de5\u4f5c\u8282\u70b9\u4e22\u5931\u540eNginx Ingress Controller\u4f1a\u63d0\u793a502\u7f51\u5173\u9519\u8bef\uff0c\u7136\u540e\u89e6\u53d1502\u8f6c\u53d1\uff0c\u5c06Github\u4e0a\u5bf9\u5e94URI\u6587\u4ef6\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002\u4e0d\u8fc7\u4e0d\u77e5\u9053\u662f\u4e0d\u662fGithub\u9650\u6d41\uff0c\u9875\u9762\u52a0\u8f7d\u6709\u70b9\u6162\uff01\u5355\u6587\u4ef6\u52a0\u8f7d\u8fd8\u884c\uff0c\u4f46\u662f\u4e00\u4e2a\u9875\u9762\u901a\u5e38\u6709\u51e0\u5341\u4e2a\u6587\u4ef6\uff0c\u5728\u6d4f\u89c8\u5668\u7f13\u5b58\u4e86\u4e00\u4e9b\u6587\u4ef6\u4e4b\u540e\u901f\u5ea6\u624d\u597d\u4e00\u4e9b\u3002\n<\/pre>\n","protected":false},"excerpt":{"rendered":"<p>\u524d\u8a00 \u7531\u4e8e\u672c\u7f51\u7ad9\u90e8\u7f72\u7684\u95ee\u9898\uff08\u4e91\u670d\u52a1+\u672c\u5730\u90e8\u7f72\uff09\uff0c\u672c\u5730\u53ef\u80fd\u6709\u591a\u79cd\u539f\u56e0\u5931\u8054\u3002\u4e3a\u4e86\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7f51\u7ad9\u4f9d\u7136\u80fd\u88ab\u7528\u6237\u67e5\u770b\uff0c [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":1175,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"inline_featured_image":false,"site-container-style":"default","site-container-layout":"default","site-sidebar-layout":"default","site-transparent-header":"default","prose-style":"enable","disable-article-header":"default","disable-site-header":"default","disable-site-footer":"default","disable-content-area-spacing":"default","footnotes":""},"categories":[68,33],"tags":[65,44,45,66,67],"_links":{"self":[{"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/posts\/1162"}],"collection":[{"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/comments?post=1162"}],"version-history":[{"count":17,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/posts\/1162\/revisions"}],"predecessor-version":[{"id":1191,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/posts\/1162\/revisions\/1191"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/media\/1175"}],"wp:attachment":[{"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/media?parent=1162"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/categories?post=1162"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/blog.wanderto.top\/wp-json\/wp\/v2\/tags?post=1162"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}