# Simple workflow for deploying static content to GitHub Pages
name: Publish Docker image

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# env
env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_NAME_BLOG: dbopen/my-blog 
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
        # Docker Image upload
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: dbopen/my-blog
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BLOG}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false
  notify_k8s_deployment_update:
    name: Notify K8s Deployment Update
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Notify
        run: |
          TIMESTAMP=$(date +%s)
          curl -k --location --request PATCH 'https://114.55.88.175:6443/apis/apps/v1/namespaces/blog-web/deployments/static-blog' \
          --header 'Authorization: Bearer ${{ secrets.K8S_UPDATE_TOKEN }}' \
          --header 'Content-Type: application/merge-patch+json' \
          --data '{  
                   "spec": {  
                       "template": {  
                           "metadata": {  
                               "annotations": {  
                                   "issued-timestamp": "'$TIMESTAMP'"    
                               }  
                           }  
                       }  
                   }  
               }'
